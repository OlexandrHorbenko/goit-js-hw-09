{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAcC,SAASC,cAAc,SA2B3C,SAASC,EAAqBC,G,IAAEC,EAAFD,EAAEC,SAAUC,EAAZF,EAAYE,MACxCC,EAAAT,GAASU,OAAOC,QAAQ,uBAAwCC,OAAfL,EAAS,QAAYK,OAANJ,EAAM,M,CAGxE,SAASK,EAAmBP,G,IAAEC,EAAFD,EAAEC,SAAUC,EAAZF,EAAYE,MACtCC,EAAAT,GAASU,OAAOI,QAAQ,sBAAqCF,OAAfL,EAAS,QAAYK,OAANJ,EAAM,M,CAGrE,SAASO,EAAcR,EAAUC,GAE/B,OADAQ,QAAQC,IAAI,oBAA2CL,OAAvBL,EAAS,gBAAoBK,OAANJ,EAAM,OACtD,IAAIU,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEZ,WAAUC,UAEpBY,EAAO,CAAEb,WAAUC,S,GAEpBA,E,IA5CPN,EAAYsB,iBAAiB,UAAU,SAACC,GACtCA,EAAMC,iBACN,IAIqBC,EACfC,EACAC,EACAC,EAP0BC,GAK1BH,GADeD,EAJyBzB,GAKtBE,cAAc,uBAChCyB,EAAYF,EAAKvB,cAAc,sBAC/B0B,EAAcH,EAAKvB,cAAc,wBAEhC,CACLI,MAAOwB,SAASJ,EAAWK,OAC3BC,KAAMF,SAASH,EAAUI,OACzBE,OAAQH,SAASF,EAAYG,UAIjC,SAAwBzB,EAAO0B,EAAMC,GACnC,IAAK,IAAIC,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCrB,EAAcqB,EAAG5B,GAAS4B,EAAI,GAAKF,GAChCG,MAAK,SAACC,G,OAAWjC,EAAqBiC,E,IACtCC,OAAM,SAACC,G,OAAU3B,EAAmB2B,E,IAnBzCC,CADgCV,EAAxBvB,MAAwBuB,EAAjBG,KAAiBH,EAAXI,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formElement = document.querySelector('.form');\nformElement.addEventListener('submit', (event) => {\n  event.preventDefault();\n  const { delay, step, amount } = getFormValues(formElement);\n  handlePromises(delay, step, amount);\n});\n\nfunction getFormValues(form) {\n  const delayInput = form.querySelector('input[name=\"delay\"]');\n  const stepInput = form.querySelector('input[name=\"step\"]');\n  const amountInput = form.querySelector('input[name=\"amount\"]');\n  \n  return {\n    delay: parseInt(delayInput.value),\n    step: parseInt(stepInput.value),\n    amount: parseInt(amountInput.value),\n  };\n}\n\nfunction handlePromises(delay, step, amount) {\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay + (i - 1) * step)\n      .then((result) => handlePromiseSuccess(result))\n      .catch((error) => handlePromiseError(error));\n  }\n}\n\nfunction handlePromiseSuccess({ position, delay }) {\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\n\nfunction handlePromiseError({ position, delay }) {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n\nfunction createPromise(position, delay) {\n  console.log(`Creating promise ${position} with delay ${delay}ms`);\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formElement","document","querySelector","$ce04d3a99e08e73b$var$handlePromiseSuccess","param","position","delay","$parcel$interopDefault","Notify","success","concat","$ce04d3a99e08e73b$var$handlePromiseError","failure","$ce04d3a99e08e73b$var$createPromise","console","log","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","form","delayInput","stepInput","amountInput","ref","parseInt","value","step","amount","i","then","result","catch","error","$ce04d3a99e08e73b$var$handlePromises"],"version":3,"file":"03-promises.87b20775.js.map"}