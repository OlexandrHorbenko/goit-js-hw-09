{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAcC,SAASC,cAAc,SAwC3C,SAASC,EAAqBC,G,IAAEC,EAAFD,EAAEC,SAAUC,EAAZF,EAAYE,MACxCC,EAAAT,GAASU,OAAOC,QAAQ,uBAAwCC,OAAfL,EAAS,QAAYK,OAANJ,EAAM,M,CAGxE,SAASK,EAAmBP,G,IAAEC,EAAFD,EAAEC,SAAUC,EAAZF,EAAYE,MACtCC,EAAAT,GAASU,OAAOI,QAAQ,sBAAqCF,OAAfL,EAAS,QAAYK,OAANJ,EAAM,M,CAGrE,SAASO,EAAcR,EAAUC,EAAOQ,GAEtC,OADAC,QAAQC,IAAI,oBAA2CN,OAAvBL,EAAS,gBAAoBK,OAANJ,EAAM,OACtD,IAAIW,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEb,WAAUC,UAEpBa,EAAO,CAAEd,WAAUC,S,GAEpBQ,E,IAxDPd,EAAYuB,iBAAiB,UAAU,SAAAC,GACrCA,EAAMC,iBACN,IAIqBC,EACfC,EACAC,EACAC,EAP0BC,GAK1BH,GADeD,EAJyB1B,GAKtBE,cAAc,uBAChC0B,EAAYF,EAAKxB,cAAc,sBAC/B2B,EAAcH,EAAKxB,cAAc,wBAChC,CACLI,MAAOyB,SAASJ,EAAWK,OAC3BlB,KAAMiB,SAASH,EAAUI,OACzBC,OAAQF,SAASF,EAAYG,UAIjC,SAAwB1B,EAAOQ,EAAMmB,GACnC,IAAIC,EAAI,EACFC,EAAaC,aAAY,WACzBF,GAAKD,GACPpB,EAAcqB,EAAG5B,GAAS4B,EAAI,GAAKpB,GAChCuB,MAAK,SAAAC,G,OAAUnC,EAAqBmC,E,IACpCC,OAAM,SAAAC,G,OAAS7B,EAAmB6B,E,IACrCN,GAAK,GAELO,cAAcN,E,GAEfrB,GAEHM,YAAW,WACXP,EAAcqB,EAAG5B,EAAOQ,GACrBuB,MAAK,SAAAC,G,OAAUnC,EAAqBmC,E,IACpCC,OAAM,SAAAC,G,OAAS7B,EAAmB6B,E,IACrCN,GAAK,C,GACJ5B,EAAQQ,EAAOoB,E,CAhChBQ,CADgCZ,EAAxBxB,MAAwBwB,EAAjBhB,KAAiBgB,EAAXG,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formElement = document.querySelector('.form');\n\nformElement.addEventListener('submit', event => {\n  event.preventDefault();\n  const { delay, step, amount } = getFormValues(formElement);\n  handlePromises(delay, step, amount);\n});\n\nfunction getFormValues(form) {\n  const delayInput = form.querySelector('input[name=\"delay\"]');\n  const stepInput = form.querySelector('input[name=\"step\"]');\n  const amountInput = form.querySelector('input[name=\"amount\"]');\n  return {\n    delay: parseInt(delayInput.value),\n    step: parseInt(stepInput.value),\n    amount: parseInt(amountInput.value),\n  };\n}\n\nfunction handlePromises(delay, step, amount) {\n  let i = 1;\n  const intervalId = setInterval(() => {\n    if (i <= amount) {\n      createPromise(i, delay + (i - 1) * step)\n        .then(result => handlePromiseSuccess(result))\n        .catch(error => handlePromiseError(error));\n      i += 1;\n    } else {\n      clearInterval(intervalId);\n    }\n  }, step);\n\n  setTimeout(() => {\n  createPromise(i, delay, step)\n    .then(result => handlePromiseSuccess(result))\n    .catch(error => handlePromiseError(error));\n  i += 1;\n}, delay + step * i);\n}\n\nfunction handlePromiseSuccess({ position, delay }) {\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\n\nfunction handlePromiseError({ position, delay }) {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n\nfunction createPromise(position, delay, step) {\n  console.log(`Creating promise ${position} with delay ${delay}ms`);\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, step);\n  });\n}"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formElement","document","querySelector","$ce04d3a99e08e73b$var$handlePromiseSuccess","param","position","delay","$parcel$interopDefault","Notify","success","concat","$ce04d3a99e08e73b$var$handlePromiseError","failure","$ce04d3a99e08e73b$var$createPromise","step","console","log","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","form","delayInput","stepInput","amountInput","ref","parseInt","value","amount","i","intervalId","setInterval","then","result","catch","error","clearInterval","$ce04d3a99e08e73b$var$handlePromises"],"version":3,"file":"03-promises.a739e5c5.js.map"}