{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAcC,SAASC,cAAc,SAwC3C,SAASC,GAAqBC,SAAEA,EAAQC,MAAEA,IACxCC,EAAAR,GAASS,OAAOC,QAAQ,uBAAqBJ,QAAiBC,M,CAGhE,SAASI,GAAmBL,SAAEA,EAAQC,MAAEA,IACtCC,EAAAR,GAASS,OAAOG,QAAQ,sBAAoBN,QAAeC,M,CAG7D,SAASM,EAAcP,EAAUC,EAAOO,GAEtC,OADAC,QAAQC,IAAI,oBAAoBV,gBAAuBC,OAChD,IAAIU,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEZ,E,MAAUC,IAEpBY,EAAO,C,SAAEb,E,MAAUC,GAAQ,GAE5BO,EAAK,G,CAxDZZ,EAAYqB,iBAAiB,UAAUC,IACrCA,EAAMC,iBACN,MAAMlB,MAAEA,EAAKO,KAAEA,EAAIY,OAAEA,GAIvB,SAAuBC,GACrB,MAAMC,EAAaD,EAAKvB,cAAc,uBAChCyB,EAAYF,EAAKvB,cAAc,sBAC/B0B,EAAcH,EAAKvB,cAAc,wBACvC,MAAO,CACLG,MAAOwB,SAASH,EAAWI,OAC3BlB,KAAMiB,SAASF,EAAUG,OACzBN,OAAQK,SAASD,EAAYE,O,CAXCC,CAAc/B,IAehD,SAAwBK,EAAOO,EAAMY,GACnC,IAAIQ,EAAI,EACR,MAAMC,EAAaC,aAAY,KACzBF,GAAKR,GACPb,EAAcqB,EAAG3B,GAAS2B,EAAI,GAAKpB,GAChCuB,MAAKC,GAAUjC,EAAqBiC,KACpCC,OAAMC,GAAS7B,EAAmB6B,KACrCN,GAAK,GAELO,cAAcN,EAAW,GAE1BrB,GAEFM,YAAW,KACVP,EAAcqB,EAAG3B,GAAS2B,EAAI,GAAKpB,GAChCuB,MAAKC,GAAUjC,EAAqBiC,KACpCC,OAAMC,GAAS7B,EAAmB6B,KACrCN,GAAK,CAAC,GACL3B,GAASmB,EAAS,GAAKZ,E,CAhC1B4B,CAAenC,EAAOO,EAAMY,EAAO","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formElement = document.querySelector('.form');\n\nformElement.addEventListener('submit', event => {\n  event.preventDefault();\n  const { delay, step, amount } = getFormValues(formElement);\n  handlePromises(delay, step, amount);\n});\n\nfunction getFormValues(form) {\n  const delayInput = form.querySelector('input[name=\"delay\"]');\n  const stepInput = form.querySelector('input[name=\"step\"]');\n  const amountInput = form.querySelector('input[name=\"amount\"]');\n  return {\n    delay: parseInt(delayInput.value),\n    step: parseInt(stepInput.value),\n    amount: parseInt(amountInput.value),\n  };\n}\n\nfunction handlePromises(delay, step, amount) {\n  let i = 1;\n  const intervalId = setInterval(() => {\n    if (i <= amount) {\n      createPromise(i, delay + (i - 1) * step)\n        .then(result => handlePromiseSuccess(result))\n        .catch(error => handlePromiseError(error));\n      i += 1;\n    } else {\n      clearInterval(intervalId);\n    }\n  }, step);\n\n   setTimeout(() => {\n    createPromise(i, delay + (i - 1) * step)\n      .then(result => handlePromiseSuccess(result))\n      .catch(error => handlePromiseError(error));\n    i += 1;\n  }, delay + (amount - 1) * step);\n}\n\nfunction handlePromiseSuccess({ position, delay }) {\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\n\nfunction handlePromiseError({ position, delay }) {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n\nfunction createPromise(position, delay, step) {\n  console.log(`Creating promise ${position} with delay ${delay}ms`);\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, step);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$formElement","document","querySelector","$47d4ff9957288465$var$handlePromiseSuccess","position","delay","$parcel$interopDefault","Notify","success","$47d4ff9957288465$var$handlePromiseError","failure","$47d4ff9957288465$var$createPromise","step","console","log","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","amount","form","delayInput","stepInput","amountInput","parseInt","value","$47d4ff9957288465$var$getFormValues","i","intervalId","setInterval","then","result","catch","error","clearInterval","$47d4ff9957288465$var$handlePromises"],"version":3,"file":"03-promises.59022539.js.map"}